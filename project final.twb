<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0213.1102                               -->
<workbook original-version='18.1' source-build='2021.4.4 (20214.22.0213.1102)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='top n' datatype='integer' name='[users Parameter]' param-domain-type='range' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
        <range max='20' min='1' />
      </column>
    </datasource>
    <datasource caption='Extract+ (Multiple Connections)' inline='true' name='federated.1b69ain1ekvtd513wv3n40h79x93' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='fact book rating' name='hyper.1k3upbp1wxl1nd18rhqsy03ad3ip'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/user/Downloads/fact book rating.hyper' default-settings='yes' server='' sslmode='' username='tableau_internal_user' />
          </named-connection>
          <named-connection caption='dim books' name='hyper.0hxu5gi16jvh631b8h2lv0rmse7c'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/user/Downloads/dim books.hyper' default-settings='yes' server='' sslmode='' username='tableau_internal_user' />
          </named-connection>
          <named-connection caption='dim users' name='hyper.0h2r4zd0sqqo3j1bid3de1stakfk'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/user/Downloads/dim users.hyper' default-settings='yes' server='' sslmode='' username='tableau_internal_user' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='hyper.1k3upbp1wxl1nd18rhqsy03ad3ip' name='Extract' table='[Extract].[Extract]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='hyper.1k3upbp1wxl1nd18rhqsy03ad3ip' name='Extract' table='[Extract].[Extract]' type='table' />
          <relation connection='hyper.0hxu5gi16jvh631b8h2lv0rmse7c' name='Extract1' table='[Extract].[Extract]' type='table' />
          <relation connection='hyper.0h2r4zd0sqqo3j1bid3de1stakfk' name='Extract2' table='[Extract].[Extract]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[age]' value='[Extract2].[age]' />
          <map key='[book_author]' value='[Extract1].[book_author]' />
          <map key='[book_rating]' value='[Extract].[book_rating]' />
          <map key='[book_title]' value='[Extract1].[book_title]' />
          <map key='[city]' value='[Extract2].[city]' />
          <map key='[country]' value='[Extract2].[country]' />
          <map key='[district]' value='[Extract2].[district]' />
          <map key='[isbnBK]' value='[Extract1].[isbnBK]' />
          <map key='[isbnSK (Extract1)]' value='[Extract1].[isbnSK]' />
          <map key='[isbnSK]' value='[Extract].[isbnSK]' />
          <map key='[publisher]' value='[Extract1].[publisher]' />
          <map key='[userBK]' value='[Extract2].[userBK]' />
          <map key='[userSK (Extract2)]' value='[Extract2].[userSK]' />
          <map key='[userSK]' value='[Extract].[userSK]' />
          <map key='[year_of_publication]' value='[Extract1].[year_of_publication]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>isbnSK</remote-name>
            <remote-type>20</remote-type>
            <local-name>[isbnSK]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>isbnSK</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>151193</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_18DD1AC49639405289977D541B1BD175]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>userSK</remote-name>
            <remote-type>20</remote-type>
            <local-name>[userSK]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>userSK</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>40565</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_18DD1AC49639405289977D541B1BD175]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>book_rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[book_rating]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>book_rating</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>11</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_18DD1AC49639405289977D541B1BD175]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>isbnSK</remote-name>
            <remote-type>20</remote-type>
            <local-name>[isbnSK (Extract1)]</local-name>
            <parent-name>[Extract1]</parent-name>
            <remote-alias>isbnSK</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>249452</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>isbnBK</remote-name>
            <remote-type>129</remote-type>
            <local-name>[isbnBK]</local-name>
            <parent-name>[Extract1]</parent-name>
            <remote-alias>isbnBK</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>249452</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year_of_publication</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year_of_publication]</local-name>
            <parent-name>[Extract1]</parent-name>
            <remote-alias>year_of_publication</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>65</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>book_title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[book_title]</local-name>
            <parent-name>[Extract1]</parent-name>
            <remote-alias>book_title</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>249452</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>book_author</remote-name>
            <remote-type>129</remote-type>
            <local-name>[book_author]</local-name>
            <parent-name>[Extract1]</parent-name>
            <remote-alias>book_author</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>53972</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>publisher</remote-name>
            <remote-type>129</remote-type>
            <local-name>[publisher]</local-name>
            <parent-name>[Extract1]</parent-name>
            <remote-alias>publisher</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>8720</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>userSK</remote-name>
            <remote-type>20</remote-type>
            <local-name>[userSK (Extract2)]</local-name>
            <parent-name>[Extract2]</parent-name>
            <remote-alias>userSK</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>276237</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>userBK</remote-name>
            <remote-type>20</remote-type>
            <local-name>[userBK]</local-name>
            <parent-name>[Extract2]</parent-name>
            <remote-alias>userBK</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>276237</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age]</local-name>
            <parent-name>[Extract2]</parent-name>
            <remote-alias>age</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>166</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[Extract2]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>17269</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>district</remote-name>
            <remote-type>129</remote-type>
            <local-name>[district]</local-name>
            <parent-name>[Extract2]</parent-name>
            <remote-alias>district</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2397</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[Extract2]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>312</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='book rating' datatype='table' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_18DD1AC49639405289977D541B1BD175]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='books' datatype='table' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='users' datatype='table' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577]' role='measure' type='quantitative' />
      <column datatype='integer' name='[book_rating]' role='measure' type='quantitative' />
      <column datatype='string' name='[book_title]' role='dimension' type='nominal' />
      <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' hidden='true' name='[isbnSK (Extract1)]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[userSK (Extract2)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[year_of_publication]' role='dimension' type='quantitative' />
      <group caption='top n book_title' name='[book_title Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[users Parameter]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='AVG([book_rating])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[book_title]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='top n country' name='[top n by parameter]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[users Parameter]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[country]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='country, city'>
          <field>[country]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Israel&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='top n' datatype='integer' name='[users Parameter]' param-domain-type='range' role='measure' type='quantitative' value='10'>
          <calculation class='tableau' formula='10' />
          <range max='20' min='1' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='book rating' id='Extract (Extract.Extract)_18DD1AC49639405289977D541B1BD175'>
            <properties context=''>
              <relation connection='hyper.1k3upbp1wxl1nd18rhqsy03ad3ip' name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
          <object caption='books' id='Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86'>
            <properties context=''>
              <relation connection='hyper.0hxu5gi16jvh631b8h2lv0rmse7c' name='Extract1' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
          <object caption='users' id='Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577'>
            <properties context=''>
              <relation connection='hyper.0h2r4zd0sqqo3j1bid3de1stakfk' name='Extract2' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[isbnSK]' />
              <expression op='[isbnSK (Extract1)]' />
            </expression>
            <first-end-point object-id='Extract (Extract.Extract)_18DD1AC49639405289977D541B1BD175' />
            <second-end-point object-id='Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[userSK]' />
              <expression op='[userSK (Extract2)]' />
            </expression>
            <first-end-point object-id='Extract (Extract.Extract)_18DD1AC49639405289977D541B1BD175' />
            <second-end-point object-id='Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Extract+ (Multiple Connections) (2)' inline='true' name='federated.1b69ain1ekvtd513wv3n40h79x93 (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='fact book rating' name='hyper.1k3upbp1wxl1nd18rhqsy03ad3ip (copy)'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/user/Downloads/fact_book_rating.hyper' default-settings='yes' server='' sslmode='' username='tableau_internal_user' />
          </named-connection>
          <named-connection caption='dim books' name='hyper.0hxu5gi16jvh631b8h2lv0rmse7c (copy)'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/user/Downloads/dim_books.hyper' default-settings='yes' server='' sslmode='' username='tableau_internal_user' />
          </named-connection>
          <named-connection caption='dim users' name='hyper.0h2r4zd0sqqo3j1bid3de1stakfk (copy)'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/user/Downloads/dim_users.hyper' default-settings='yes' server='' sslmode='' username='tableau_internal_user' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='hyper.1k3upbp1wxl1nd18rhqsy03ad3ip (copy)' name='Extract' table='[Extract].[Extract]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='hyper.1k3upbp1wxl1nd18rhqsy03ad3ip (copy)' name='Extract' table='[Extract].[Extract]' type='table' />
          <relation connection='hyper.0hxu5gi16jvh631b8h2lv0rmse7c (copy)' name='Extract1' table='[Extract].[Extract]' type='table' />
          <relation connection='hyper.0h2r4zd0sqqo3j1bid3de1stakfk (copy)' name='Extract2' table='[Extract].[Extract]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[age]' value='[Extract2].[age]' />
          <map key='[book_author]' value='[Extract1].[book_author]' />
          <map key='[book_rating]' value='[Extract].[book_rating]' />
          <map key='[book_title]' value='[Extract1].[book_title]' />
          <map key='[city]' value='[Extract2].[city]' />
          <map key='[country]' value='[Extract2].[country]' />
          <map key='[district]' value='[Extract2].[district]' />
          <map key='[isbnBK]' value='[Extract1].[isbnBK]' />
          <map key='[isbnSK (Extract1)]' value='[Extract1].[isbnSK]' />
          <map key='[isbnSK]' value='[Extract].[isbnSK]' />
          <map key='[publisher]' value='[Extract1].[publisher]' />
          <map key='[userBK]' value='[Extract2].[userBK]' />
          <map key='[userSK (Extract2)]' value='[Extract2].[userSK]' />
          <map key='[userSK]' value='[Extract].[userSK]' />
          <map key='[year_of_publication]' value='[Extract1].[year_of_publication]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>isbnSK</remote-name>
            <remote-type>20</remote-type>
            <local-name>[isbnSK]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>isbnSK</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>151193</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_18DD1AC49639405289977D541B1BD175]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>userSK</remote-name>
            <remote-type>20</remote-type>
            <local-name>[userSK]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>userSK</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>40565</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_18DD1AC49639405289977D541B1BD175]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>book_rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[book_rating]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>book_rating</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>11</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_18DD1AC49639405289977D541B1BD175]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>isbnSK</remote-name>
            <remote-type>20</remote-type>
            <local-name>[isbnSK (Extract1)]</local-name>
            <parent-name>[Extract1]</parent-name>
            <remote-alias>isbnSK</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>249452</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>isbnBK</remote-name>
            <remote-type>129</remote-type>
            <local-name>[isbnBK]</local-name>
            <parent-name>[Extract1]</parent-name>
            <remote-alias>isbnBK</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>249452</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year_of_publication</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year_of_publication]</local-name>
            <parent-name>[Extract1]</parent-name>
            <remote-alias>year_of_publication</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>65</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>book_title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[book_title]</local-name>
            <parent-name>[Extract1]</parent-name>
            <remote-alias>book_title</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>249452</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>book_author</remote-name>
            <remote-type>129</remote-type>
            <local-name>[book_author]</local-name>
            <parent-name>[Extract1]</parent-name>
            <remote-alias>book_author</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>53972</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>publisher</remote-name>
            <remote-type>129</remote-type>
            <local-name>[publisher]</local-name>
            <parent-name>[Extract1]</parent-name>
            <remote-alias>publisher</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>8720</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>userSK</remote-name>
            <remote-type>20</remote-type>
            <local-name>[userSK (Extract2)]</local-name>
            <parent-name>[Extract2]</parent-name>
            <remote-alias>userSK</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>276237</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>userBK</remote-name>
            <remote-type>20</remote-type>
            <local-name>[userBK]</local-name>
            <parent-name>[Extract2]</parent-name>
            <remote-alias>userBK</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>276237</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age]</local-name>
            <parent-name>[Extract2]</parent-name>
            <remote-alias>age</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>166</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[Extract2]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>17269</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>district</remote-name>
            <remote-type>129</remote-type>
            <local-name>[district]</local-name>
            <parent-name>[Extract2]</parent-name>
            <remote-alias>district</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2397</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[Extract2]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>312</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='RatingsTypes' datatype='string' name='[Calculation_318066746676879360]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if[book_rating]&gt;5 THEN &quot;High Rating&quot; ELSE &quot;Low Rating&quot; END' />
      </column>
      <column caption='AVG' datatype='real' name='[Calculation_475411258006745089]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([book_rating])/ countd([book_rating])' />
      </column>
      <column aggregation='CountD' caption='High_Low_rating' datatype='string' default-role='measure' default-type='ordinal' name='[Calculation_475411258008580098]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if([book_rating])&gt;=5 then &apos;High Rating&apos; ELSEIF ([book_rating])&lt;5 and [book_rating]&gt;0 then &apos;Low Rating&apos; ELSE &apos;No Rating&apos; END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='book rating' datatype='table' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_18DD1AC49639405289977D541B1BD175]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='books' datatype='table' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='users' datatype='table' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577]' role='measure' type='quantitative' />
      <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[year_of_publication]' role='dimension' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <group caption='top n by parameter' name='[top n by parameter]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[users Parameter]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[country]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='country, city'>
          <field>[country]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.692124' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.307876' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;bulgaria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;dominica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;guatemala&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;marshall islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;palau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;senegal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;togo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;zimbabwe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;congo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;gabon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;iran&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;lithuania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;netherlands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;rwanda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;suriname&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;usa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;bosnia and herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;cyprus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ghana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;malaysia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;nigeria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;syria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;vietnam&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;canada&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;el salvador&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;guyana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;kiribati&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;monaco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;peru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;slovakia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;turkey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;burkina faso&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;dominican republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;guernsey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;panama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;serbia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;tonga&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;czech republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;maldives&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;norway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;san marino&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;taiwan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;yemen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;colombia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;finland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;india&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;liberia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;romania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;sri lanka&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;unknown&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;costa rica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;gambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;iraq&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;luxembourg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;new zealand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;saint kitts and nevis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;swaziland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;uzbekistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;chile&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;faroe islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;hungary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;puerto rico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;south africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;united arab emirates&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;antarctica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;denmark&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;grenada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;jamaica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;mali&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;oman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;sao tome and principe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;tajikistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;yugoslavia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;cape verde&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;eritrea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;haiti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;kuwait&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;mongolia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;philippines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;slovenia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;turkmenistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;bahamas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;cayman islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;estonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;honduras&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;montenegro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;solomon islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;uganda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;china&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;fiji&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;iceland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;lesotho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;qatar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;spain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;united kingdom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;comoros&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;france&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;indonesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;nepal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;russia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;sudan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;uruguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;cambodia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ecuador&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;guinea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;kazakhstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;papua new guinea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;sierra leone&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;trinidad and tobago&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;antigua and barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;brunei darussalam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;djibouti&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;guam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;malta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;saudi arabia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;thailand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;zambia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;croatia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;georgia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;madagascar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;nicaragua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;saint lucia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;sweden&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;vanuatu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;chad&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ethiopia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;hong kong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;portugal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;somalia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ukraine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;cameroon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;egypt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;guinea-bissau&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;kenya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;paraguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;singapore&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;tunisia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;american samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;cuba&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;germany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;isle of man&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;malawi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;niger&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;saint vincent and the grenadines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;switzerland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;venezuela&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Israel&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='top n' datatype='integer' name='[users Parameter]' param-domain-type='range' role='measure' type='quantitative' value='10'>
          <calculation class='tableau' formula='10' />
          <range max='20' min='1' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='book rating' id='Extract (Extract.Extract)_18DD1AC49639405289977D541B1BD175'>
            <properties context=''>
              <relation connection='hyper.1k3upbp1wxl1nd18rhqsy03ad3ip (copy)' name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
          <object caption='books' id='Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86'>
            <properties context=''>
              <relation connection='hyper.0hxu5gi16jvh631b8h2lv0rmse7c (copy)' name='Extract1' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
          <object caption='users' id='Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577'>
            <properties context=''>
              <relation connection='hyper.0h2r4zd0sqqo3j1bid3de1stakfk (copy)' name='Extract2' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[isbnSK]' />
              <expression op='[isbnSK (Extract1)]' />
            </expression>
            <first-end-point object-id='Extract (Extract.Extract)_18DD1AC49639405289977D541B1BD175' />
            <second-end-point object-id='Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[userSK]' />
              <expression op='[userSK (Extract2)]' />
            </expression>
            <first-end-point object-id='Extract (Extract.Extract)_18DD1AC49639405289977D541B1BD175' />
            <second-end-point object-id='Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='map country users'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.1b69ain1ekvtd513wv3n40h79x93' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1b69ain1ekvtd513wv3n40h79x93'>
            <_.fcp.ObjectModelTableType.true...column caption='users' datatype='table' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='users' datatype='integer' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b69ain1ekvtd513wv3n40h79x93].[none:country:nk]' />
              <lod column='[federated.1b69ain1ekvtd513wv3n40h79x93].[none:country:nk]' />
              <size column='[federated.1b69ain1ekvtd513wv3n40h79x93].[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1b69ain1ekvtd513wv3n40h79x93].[Latitude (generated)]</rows>
        <cols>[federated.1b69ain1ekvtd513wv3n40h79x93].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DC90C2F0-F23C-4B4B-8334-A99429566E6C}' />
    </worksheet>
    <worksheet name='rating by books'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.1b69ain1ekvtd513wv3n40h79x93' />
          </datasources>
          <datasource-dependencies datasource='federated.1b69ain1ekvtd513wv3n40h79x93'>
            <_.fcp.ObjectModelTableType.true...column caption='books' datatype='table' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[book_rating]' role='measure' type='quantitative' />
            <column-instance column='[book_rating]' derivation='None' name='[none:book_rating:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='books' datatype='integer' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1b69ain1ekvtd513wv3n40h79x93].[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b69ain1ekvtd513wv3n40h79x93].[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86:qk]</rows>
        <cols>[federated.1b69ain1ekvtd513wv3n40h79x93].[none:book_rating:qk]</cols>
      </table>
      <simple-id uuid='{B1BBFD33-F529-43DD-8461-CD8E83501A28}' />
    </worksheet>
    <worksheet name='rating by users'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.1b69ain1ekvtd513wv3n40h79x93' />
          </datasources>
          <datasource-dependencies datasource='federated.1b69ain1ekvtd513wv3n40h79x93'>
            <_.fcp.ObjectModelTableType.true...column caption='users' datatype='table' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[book_rating]' role='measure' type='quantitative' />
            <column-instance column='[book_rating]' derivation='None' name='[none:book_rating:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='users' datatype='integer' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1b69ain1ekvtd513wv3n40h79x93].[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b69ain1ekvtd513wv3n40h79x93].[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577:qk]</rows>
        <cols>[federated.1b69ain1ekvtd513wv3n40h79x93].[none:book_rating:qk]</cols>
      </table>
      <simple-id uuid='{43005060-FDBD-4864-9E2B-843CE17CDD32}' />
    </worksheet>
    <worksheet name='top 10 books'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.1b69ain1ekvtd513wv3n40h79x93' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='top n' datatype='integer' name='[users Parameter]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='20' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1b69ain1ekvtd513wv3n40h79x93'>
            <_.fcp.ObjectModelTableType.true...column caption='books' datatype='table' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86:qk]' pivot='key' type='quantitative' />
            <column-instance column='[book_rating]' derivation='Avg' name='[avg:book_rating:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[book_rating]' role='measure' type='quantitative' />
            <column datatype='string' name='[book_title]' role='dimension' type='nominal' />
            <column-instance column='[book_title]' derivation='None' name='[none:book_title:nk]' pivot='key' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='books' datatype='integer' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b69ain1ekvtd513wv3n40h79x93].[book_title Set]' />
          <slices>
            <column>[federated.1b69ain1ekvtd513wv3n40h79x93].[book_title Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1b69ain1ekvtd513wv3n40h79x93].[avg:book_rating:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1b69ain1ekvtd513wv3n40h79x93].[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1b69ain1ekvtd513wv3n40h79x93].[avg:book_rating:qk] + [federated.1b69ain1ekvtd513wv3n40h79x93].[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86:qk])</rows>
        <cols>[federated.1b69ain1ekvtd513wv3n40h79x93].[none:book_title:nk]</cols>
      </table>
      <simple-id uuid='{42C1F45C-733B-4C64-BE91-E40277B3C183}' />
    </worksheet>
    <worksheet name='top 20 country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.1b69ain1ekvtd513wv3n40h79x93' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='top n' datatype='integer' name='[users Parameter]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='20' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1b69ain1ekvtd513wv3n40h79x93'>
            <_.fcp.ObjectModelTableType.true...column caption='books' datatype='table' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='books' datatype='integer' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b69ain1ekvtd513wv3n40h79x93].[top n by parameter]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1b69ain1ekvtd513wv3n40h79x93].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1b69ain1ekvtd513wv3n40h79x93].[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1b69ain1ekvtd513wv3n40h79x93].[top n by parameter]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1b69ain1ekvtd513wv3n40h79x93].[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b69ain1ekvtd513wv3n40h79x93].[none:country:nk]</rows>
        <cols>[federated.1b69ain1ekvtd513wv3n40h79x93].[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86:qk]</cols>
      </table>
      <simple-id uuid='{22232BB2-A434-4C23-AF89-0681303BA32B}' />
    </worksheet>
    <worksheet name='treemap age'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.1b69ain1ekvtd513wv3n40h79x93' />
          </datasources>
          <datasource-dependencies datasource='federated.1b69ain1ekvtd513wv3n40h79x93'>
            <_.fcp.ObjectModelTableType.true...column caption='users' datatype='table' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[age]' role='measure' type='quantitative' />
            <column-instance column='[age]' derivation='None' name='[none:age:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='users' datatype='integer' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1b69ain1ekvtd513wv3n40h79x93].[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1b69ain1ekvtd513wv3n40h79x93].[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577:qk]' />
              <color column='[federated.1b69ain1ekvtd513wv3n40h79x93].[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577:qk]' />
              <text column='[federated.1b69ain1ekvtd513wv3n40h79x93].[none:age:qk]' />
              <text column='[federated.1b69ain1ekvtd513wv3n40h79x93].[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{FBA4B7B5-69E1-4F05-ABC1-69B8984200DC}' />
    </worksheet>
    <worksheet name='treemap book rating'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.1b69ain1ekvtd513wv3n40h79x93' />
          </datasources>
          <datasource-dependencies datasource='federated.1b69ain1ekvtd513wv3n40h79x93'>
            <_.fcp.ObjectModelTableType.true...column caption='books' datatype='table' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[book_rating]' role='measure' type='quantitative' />
            <column-instance column='[book_rating]' derivation='None' name='[none:book_rating:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='books' datatype='integer' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1b69ain1ekvtd513wv3n40h79x93].[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1b69ain1ekvtd513wv3n40h79x93].[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86:qk]' />
              <color column='[federated.1b69ain1ekvtd513wv3n40h79x93].[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86:qk]' />
              <text column='[federated.1b69ain1ekvtd513wv3n40h79x93].[none:book_rating:qk]' />
              <text column='[federated.1b69ain1ekvtd513wv3n40h79x93].[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E06C3D06-6F4F-41C1-990C-FF0C41522DA9}' />
    </worksheet>
    <worksheet name='year of publication'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections) (2)' name='federated.1b69ain1ekvtd513wv3n40h79x93 (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1b69ain1ekvtd513wv3n40h79x93 (copy)'>
            <_.fcp.ObjectModelTableType.true...column caption='books' datatype='table' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year_of_publication]' derivation='None' name='[none:year_of_publication:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year_of_publication]' derivation='None' name='[none:year_of_publication:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[year_of_publication]' role='dimension' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='books' datatype='integer' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b69ain1ekvtd513wv3n40h79x93 (copy)].[none:year_of_publication:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b69ain1ekvtd513wv3n40h79x93 (copy)].[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86:qk]</rows>
        <cols>[federated.1b69ain1ekvtd513wv3n40h79x93 (copy)].[none:year_of_publication:ok]</cols>
      </table>
      <simple-id uuid='{9712D353-86BA-4AFA-BA99-3BC19DC7540A}' />
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' name='treemap book rating'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b69ain1ekvtd513wv3n40h79x93].[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_7A3DFC0F9E124A12B4FF8947294BCF86:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b69ain1ekvtd513wv3n40h79x93].[none:book_rating:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7D650674-2A17-4FE5-A959-FB707E033E14}' />
    </window>
    <window class='worksheet' name='rating by books'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D1AB524C-B19B-4631-9FA3-A84A0DA85B47}' />
    </window>
    <window class='worksheet' name='treemap age'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b69ain1ekvtd513wv3n40h79x93].[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b69ain1ekvtd513wv3n40h79x93].[none:age:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5CC3056A-DEA2-47FE-86B2-6DCFE570C78D}' />
    </window>
    <window class='worksheet' name='top 20 country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[users Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b69ain1ekvtd513wv3n40h79x93].[none:country:nk]</field>
            <field>[federated.1b69ain1ekvtd513wv3n40h79x93].[top n by parameter]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9306E7C6-569E-46FC-94F4-4FF1F679109E}' />
    </window>
    <window class='worksheet' maximized='true' name='year of publication'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1b69ain1ekvtd513wv3n40h79x93 (copy)].[none:year_of_publication:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b69ain1ekvtd513wv3n40h79x93 (copy)].[none:country:nk]</field>
            <field>[federated.1b69ain1ekvtd513wv3n40h79x93 (copy)].[none:year_of_publication:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5127D69A-F584-40B8-A6D4-740A912C92AC}' />
    </window>
    <window class='worksheet' name='rating by users'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{01D051CA-128C-4E8B-B0AA-3F72A24AB269}' />
    </window>
    <window class='worksheet' name='map country users'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b69ain1ekvtd513wv3n40h79x93].[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_8CC2C410FA084A03B997917D49E67577:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1b69ain1ekvtd513wv3n40h79x93].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b69ain1ekvtd513wv3n40h79x93].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F70DF21D-9DEE-4D7B-8145-71BDEF2F00F3}' />
    </window>
    <window class='worksheet' name='top 10 books'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[users Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b69ain1ekvtd513wv3n40h79x93].[:Measure Names]</field>
            <field>[federated.1b69ain1ekvtd513wv3n40h79x93].[book_title Set]</field>
            <field>[federated.1b69ain1ekvtd513wv3n40h79x93].[none:book_title:nk]</field>
            <field>[federated.1b69ain1ekvtd513wv3n40h79x93].[top n by parameter]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B0E1E1E0-8674-4958-8F99-15D6F3BA7C34}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='map country users' width='192'>
      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
      IU3e4OHj/wN6ma2oh9WdfQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='rating by books' width='192'>
      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
      RlPz/wH5h5arvZZizAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='rating by users' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='top 10 books' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='top 20 country' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29eXAV15n//em777ra9wUtSEgCxGbArGYzxhm84BBjO17IxPNLMjWT8mRS
      yUx+lZk3MzXjd5ZUXmeqMjOOHcdOvGPAMQIbm82AQSAQQkIL2vddd799b9/u9w+BbGxsIxBI
      Qv35h6L79LlPt/rb5znnPOc5gqIoCioq0xTNRBugojKRqAJQmdaoAlCZ1qgCUJnWqAJQmdao
      AlCZ1qgCUJnWqAJQmdaoAlCZ1qgCUJnWqAJQmdaoAlCZ1qgCUJnWqAJQmdaoAlCZ1qgCUJnW
      qAJQmdaoAlCZ1qgCuEbC4TBTefVoOBxGluWJNuO6kSQJSZLGvV5VANfIVH55YMT+qSxgRVFu
      iv26ca/xNubfXjvGVH2HZFlGIwggCBNtynWhKCMfIEEY32+2KoAxcLSybaJNUBlnVBdIZVqj
      CkBlWjMtXCCfu53ufiNZ2bEMt7Tgd8QSKw9z6tRZBkQLsxYtJDsKqk8fp6lfxJlRyOI5uVj0
      6vfhdmda/IX93h7a2oaQkRnu7KBr2EVbcz2iMYmi/BlEmfUoCJid8WRlpeJra6Rz2DvRZqvc
      AqZFC/AFBC1JyWm0dFZT4xkgWbBgdnpoudiKH4WBVhcxi0LkTrSdKjedadECaNAQCrgY7O2m
      obEFv6Sg6K3MmncHhWk2evoGcftcGGNnsuzORWTEWafHg1GZHn/nqOgZxOjbOXi4HH3qTNKd
      FpSgi/MnP+ZUk4+ZOekkx2djDNZx4Ph5zOl5JNtME222yi1AULNDXxuiKLL1H9+ZaDNUxpnp
      2Qe4TlbMyWCqfi3kSASNRjN1Z4IvhaIImvF1WtQW4BoRRRGDwYAwRV8gURTR6XRotdqJNuW6
      CIfDAOj1+nGtd1r0AVRUvgxVACrTGrUPMAae+tddTNVOgIICCExNB+7Tx341+zctzWPrXUXX
      Va8qgDEw5AlOtAkqVyEghq/72mnvArnb26lqbiYy0YaojBuKonDhwgWefPJJKisr8Xq9vPzy
      y2zbto0///M/p7y8fLTstG8BIuEwwXB4qno2KldheHiYffv2kZeXRyAQwOPxkJSUxP/+7/9S
      U1NDWVkZ8+fPB6aYAGTJy4nSd6jo8JNSdBdrCjV8tO8I7W6JpFnL2LyqkK5PDlLh7qenqR9H
      9hLuWVtCz8ldHKjoBHMCyzduYmacluYzhzhSfhG3V0/2qpXM8vRy9MNSLnQHiZ4xn42r5hNl
      mppDhtMZRVEoLy8nOzubwcFBAJKSkkhKSiIUCjE4OEhGRsZo+SkkAImuEwcZnrGW72xKJBwQ
      0UY8pM7MJ8YXpPXCaZqWFIKrH9vMVWxY66Dyg330+UuwxaZTUBSD39NHzZlakpcYqWq38mff
      /i5KexMNkoJGayIhMw9NTJC2hiZahnOZkxQ90TetMkYGBgaor69n27Zt7Nq164rjBw4cwGw2
      s379+tHjU0gAMoMDAlnz49FpNOisBjrONTAkakmMiSPa0oQ/AFbspM+IxwDYbEagnwtVPViy
      UjFqwgQGA4QDQazpBUQbtQxrdWgiYdzDzbR3h0hIjSbaMEhQVnsFU5H33nuP3/72t+zdu5e2
      tjZycnJ49tlnKSsrIycnh5KSkismA6eQAAzkzktgz/4juJPsGG3x2GVADhMMyPiDX5IyQ5GJ
      KApyOITo8xKWzWiikvF9+BFHQlnI/X1E0nOQbTIoEcRgAH9AJFrtFExJnnjiCZ544gkAfv/7
      31NQUIDb7ebUqVPIskxjYyMpKSmUlJRQV1c3lQQA5vT53Bmsom1IxGSxk5FZgFjfRFBjZ+Ha
      tTgsoJszZ7R88sw5aMzxRC3MpqHbS0J2CXlmM3ZjDEtX+Gnu9mLMzicuJY44s4acLJnBkJ65
      q1YQHWOfwDtVGQ+WL19OVFQUkiSxcOFCwuEwkUgESZKoq6vj8OHDaizQtaJGg05eHlxZwBMb
      S665vCzLVFRUEBMTowrgWhFFkQ/PtE7ZvECSJKHVasY9r86tQr7UJ9Novjgyl5MSTUFm3HXV
      qwrgGlGjQScWNRpUReUmMKU6wRNN9+DkzxQRbTdjMqh/1mtFfVJj4P/8x3sTbcLX8n8fX8nC
      gpSJNmPKMDkEIEcIywo6rQ5BGFn+FolE0Or14xK+K0shZI0B3TRz+BRFIRQKjfr/Op0On89H
      MBgczbRstVoxm82j1wQCAXw+HwBGoxGr1Uo4HMbn8yEIAlarFb1ejyiK+P1+NBoNdrt9yvYt
      xl0AQVcvXV4NWSkOenrcxMXFoPu6N8/TyScXPSyYU4hFD6LbTVVtLfmLF2MDQMHd34lHsZMS
      7xizKAaqD9AadzcLptmHsbu7mz179lBRUcH27dspKCjgvffe44MPPkCWZZqbm/nOd77DI488
      MnrN7373O/bv3090dDRLly7lgQce4NVXX6WyspJQKMTatWvZsGEDL730ErW1tQiCwJYtW7j7
      7rsn8E6vn2sXgHJpSYUgXJmn/dJxLp3TaPUYDAKK4qe2tgm73YFGe+lLfrms8OnCDEVRQJGv
      Prz4mbq1Oj16RXPpmDJaXrhU15XHNAiM5JNXRqoZ/a3Ltn86mnNlXSPnBUYyiU/NEZ/LmEwm
      li9fTkxMDDAygrJ161a2bt1KMBjkhRdeYN26daPlLz+f//iP/yArKwsYGT1avXo1Tz31FP39
      /ezZs4empiYcDge/+tWv6Ozs5L333psGAhg6xWtl0Wy7O5fu1jIudsRSnC9z8N1DuBUFV8DE
      ij/bREawg2qXlnBjDUeO1HH+/Bky561keYGF0weP0NgfwDljNmuWzsNV8xFHzrYQDAYQMpay
      cO5nf1DB199EeXUXmYVzkXrqGJSzMPr6OHx8P4MeGPbqWLHlAWYZBzl48GNa+gPgD7Poyb+k
      WLnInj2H6fFJaDUy878Bw63l7P3wNK6wQnz2QtYsn0v93uc5N2xCDIrExscR8QwwpEnigc0b
      SI2e2rmBoqOjiY6Opr6+/orjiqJQWVlJTEwMCQkJo8clSaKtrY2PP/6Y2tpaFixYQGxsLEVF
      RXi9Xk6ePElOTg5ZWVmcOnWKHTt2MDQ0xOzZs2/1rY0bN+gCaXCmF7Nm+UK8F87RpQRGz2Tc
      sY6VYhaLFs3BbNbT9slrnGp0ERetp7mqgsYZCQR6NKx7+CmSpS6O1H92hCVMS+VhTjcVsXH9
      GtJijTT1fPqb9pQiVi66g3DNCWpCQVp6u0kqWsvd+cnU73sdDyGaq5rJWrOFzSkO+ivep50g
      TWdbmLX528yOkik/foT2LjdGRzIrVm4k0ddGeXMfC++7l7bys4iSCExtAXwZ4XCY2tpaSkqu
      nD3VaDSsXbuWzs5Oqqurqa+v58knn8Tn87Fnzx4KCgqYP38+brcbo9GIKIpEIpHRPsNUZAwC
      EECOIMsSfrcXiVgQtNgcTsxGHaLeiPbzrn44hCgrmBQFWdFRsnYLy/LtyOEwGn2QU3VGzAYt
      sigRuWILIh1ps+4gU/bS1D1MkjPxM+e02J1RmA06BL0BjQCSImA1GxGQkSIyICOGBWwWIxpF
      IRyWAIWILGDUaxA0oNNqURQZncGMxWxEK1qIirZh1GvR6XRTNX3ONdHZ2YkoiuTmXpn9NBwO
      k5+fz+rVq+nv7+e1116jt7eXjz/+mGXLlpGXl4cgCDQ0NKDVatm2bRu9vb288MILbNiwAaPR
      OEF3dP1cuwCsyeg6S3n9jUoU/MRmZH7NBUbiNX3s3r2TzFmLKE6fhfujUnbXmjHak1m4ZC5R
      hi72vPE6FgOIzvzPXCug1ZnJLSmh+tBxqm2L+NLQNEFPeqyF/cf3UV5mJdIzQP6dRjKz7bz7
      7tuUW6yYZQ+pqWayixP54E87OKdVMEXPYHmik97Oa34CU45z587x8ssvU1tbi81m45577uGR
      Rx7h0KFDLFmyBJNppIVra2ujsrKSpUuXsmPHDpqamohEItx5550IgsCbb77JiRMn0Gq1ZGRk
      sGXLFj766CP+9m//FkVRWLp06bjP0N4qxhAKoeB3DxOUQG80oNcZ0OsEJEnBYNQjh0JENBq0
      ikxIBpNBTyQUwOMT0ZksWE06gj4PwbCMRmfEajUjSEG8viBotSNfYtPIF12RZULhMHqDgUgo
      SETQo0VCRodeA2FZxmAwoIRFwoIWcaiL5vY+ZCFCe1UrhQ9tIdsg4XV5CCkCBr0Og9mGXpDw
      eTyEImC02LEYtUhiEMFgRiNLl+rVI4khBJ0e3WeatKkSDPfZeQC/38/AwACyLBMKhYiKiiI+
      Ph63243NZkOr1RKJRHjzzTfJyspi8eLFeDweXC4XGo2GuLg4tFot3d3dRCIjsThGo5H4+Hh8
      Ph8ulwutVktsbOxN//rfrFCIMblAFkc0ls8dvTz8qzUYuDwSfHlUWWe0EG389AqL3Xnl9VoL
      TuPnaxxJf3f5gWqMZvSfM/Xyoxb0RozIhBUJ90APw6KGuAVLmWEcKW9zfn5Flw5b1JXH9KZL
      1mp0o/Xqp2BTfjUsFgsWy8jzvTwXIAgCUVFRo2VkWaa4uJj8/HwEQcDhcOBwOK6oJy0t7Qt1
      X63cVEQNhrtGRFGkc9A/0WZ8LYnRNiymL34l1WC4qzM5ZoKnCFlJzik/N6ByJdMsOEBF5UrU
      FmAMfFTezGTJjbh8dgZGNerzhlGf4Bj4/94+MdEmjDIvL1kVwDgwJZ9g2DWAxxBFjHlKmj/u
      SJJEa2srg4ODFBcXj47vRyIRLly4AEBeXt5oeVmWqa6upqmpifT0dIqKiujo6ODcuXPIlyYk
      09LSiIqK4sKFC6PHcnNzKSwsHNlo4zZhSr5BvtYL1MXOY4kqAGRZ5uTJk5SVlSGKIqmpqSQn
      JwMj0aDPP/88drudn/3sZ6PXtLa28sYbb5Cens758+cRRRGn08nw8DCyLFNbW0traytr1qy5
      4lhfXx+FhYUTdas3hUn1BoVFP76gjCPKhuR14ReM2LURhrwevC4PYUykZH46Jq1IAfqHgjjj
      rLj7XISCHrxiBGdSFnF2PYHhHrr7XWBwkJScgDYwiGiMxaYP09fdjz02ESMhPGEZk07CM+DF
      E/CDKYrUpDiMU2ABgSAILFy4kOLiYvbu3Tt6XJZlDh06xMKFC+np6bnimpaWFhYsWMA3vvEN
      qqqqOHfuHA8//DD5+fkEAgHeeustli1bRnZ2NsXFxfj9fl544QW2bNlyW339YZIJwNvXQkWT
      yOIVJbguVnLBmMkdlmH2l10gJioGsbuFXuPjFAFyyEtNxUVc2iRKYkWOvX8IfXwMGnkQX6vC
      vatiOfHhYXy2KIRQkPahueTqL9KoWcQd6b3sLy2nZP06EiNd1HsMpNm7OXaol5gUC71DEZat
      u4usWOtEP5KvRRAEDAYDsixfMURbV1dHKBRi8eLFlJaWXnFNVlYW//mf/8nBgweBkQmzSCSC
      Tqejs7MTWZZJSkoCRiJH6+rqcDqdREfffqkiJ5UAro6WxLz5rJidg9C4n/1+AB/H3n2HrMLF
      bFyRhUnThyEmm9Vr5qPXDHBkfytSdy89cYt4aEUm4cFWjp1vQSnIRahvoD88REpRIUMeFyap
      jyjnfLQ6D7lzFlNSEk/d6Qpk5UsyzU0BXC4Xb7/9NkuWLKGpqYmuri56enpISRkJkUhPT+dn
      P/sZXq+XxsZG6urq0Gg0yLJMWVkZRUVFo6vEwuEwlZWVzJs3byJv6aYx6dqzSERCDgXo7+9H
      lAAEdAYDOo2AdrT5tbL03s1kCd3UdrhGDmkNGPVaEDRoNIDZCq5+fJJM0O8mHNFjtTjR0Ul5
      g56SOTH4ewcZHgzhTHCAoMGg16PVaNBoNFN2JxWAUChEdHQ0hw8fZu/evZw/f56amprRxUCR
      SAS9Xk9aWhr19fWkpKSg1Wrp6urC5XIxe/bs0dakt7cXURTJycm5LScBJ1ULYIuKgf7jvPxS
      JU6zhYQ0LYJWh1F/yUydCbMgoJGNmK1Oiu8o4eTH5bTGz8ZsHpkiF9BiNBkQovOZ7dzLWy+W
      IdhTWLLqLhw2I06DRIs1HqclgSzNMc4Jc5lrggGtHr1+JExAbzBcEQg3mYlEIuzcuZM//vGP
      DAwM8NJLL/Hd736X73//+8BIh3ffvn2sWrWKAwcOEA6HWbZsGf/0T/9EU1MTy5cvZ+XKlQCU
      l5ezePHi0TgsRVE4efIkixcvHh1Zut1QY4GukckWDfriT+4jxmH++oKXcLvd/OEPf+DBBx8k
      MTHx6y+YZKixQJMAi1GPMklmgsfqjWi1Wu67774rlkCqqC3ANaOmRpxY1NSIKio3AVUAKtMa
      tQ8wBv7rnbIJS4+elxbDxsW5X19QZUyoAhgDH5xqnLDfDoYkVQA3AVUAU5Senh727t1LUVER
      CxcuJBgMsnPnTs6ePUtsbCxbt24lIyMDQRCQZZkLFy7wpz/9Ca/Xy4oVK9i0aRNut5v//u//
      ZmhoiPvuu4877riDlpYW/vCHP6DVann00UdJT0+fsh3/a0EVwBQkFAqxa9cu9Ho9XV1do8cc
      DgePP/44tbW17Nq1i+9///vodDpkWcbn87F+/XqsViuvvfYaOTk5vP/++8yZM4fU1FR27NiB
      1Wplz549rFq1CkEQeOedd3j88cdvyxigy0xKAQSG2ig/XYVbMpCanc/MvBQCHTVUVDeDI525
      JbMwRPpx94fo6W7FmJaP1d1F12Avgx6FzNwshtsaCZtTKJlfjHawjrJzDQQFE7nFi8hOMNHT
      UEn7gIcBl0RGcQlpFj/ecBQpiXakoXbawk6yE2wT/SiuisFg4Omnn6ayspL29nZgJEvDpk2b
      kCSJ5uZmnE7naHmdTsfChQtHwx2ioqIwGAxIkkR2djaZmZmkp6cTCoUIhUIUFRVhNBpHQ6Bv
      ZwFMvlEgeYjTh05BYjY5GXZaa5oIRIY5d7YBS2wSOn83VXUtuDwtHH7/OD5DHIlRGlqrqglF
      ZZCXEuH48UacabmYg8209ARAAVtsEvF2I82153EFJRqrK3Hp4shJ0NHY1IEUCFDfcJFAWKT5
      YisBaWoFwymKwpEjR3j88cc5c+YMy5Ytu2LM3+/383d/93f8/Oc/p6CggPT0dDZv3swvf/lL
      tm3bhsVioaCggIKCAr73ve+xfft2Dh8+jNvtnsC7uvlMvhbA04Unfh73zM5C9HbQ1tCA4mnk
      bFU78R4PAjqS47Qga0mZNZ/Fc3PRabzo7KkUFOfhkAWaegQK87LpkDsZkiIM9DbRdHEYKeTH
      p42mUARHQga5swtJCjTR0RjGFp+MvaGczs4e+iWBfOfU2iZVEARWrFjBnXfeydGjRyktLeUv
      /uIvRieOLBYL//Iv/8Lg4CCvvvoq5eXlHD9+nB//+MckJSXx29/+ltraWr75zW/yzW9+E5/P
      x0svvXRbf/1hMgrA7ICuC7QOJ2Bz9+OVQDDHkpKUxKIN64nXBnCFtQiyC6vFeg2bXigMdHsp
      XreJBHcjB8+0XL2YxsqsdAM7zlWRk5SH3Tx5Z0wVRSEQCBAIBAgGg6MZ4Lq6upg5cyZms5ne
      3t7RjHCSJHH69GkyMzOx2WyEw2EGBgYYGhoarcfv9xMIBGhra8NqtVJeXo7b7SY+Pn6ib/em
      MvkEYEhi7qxGPnrndRSzCYspE50xg2V3tHH4T28QMsYwd8kKMqKdxMSM5qAjLjkePSAINpKS
      RkYtzI54ZK0eW3Em+3a/hS4hm8zsTMwGLc64REwawGAjMUZCqxEwpM8k4fg+4lbmoJ/EAx9+
      v59//Md/pKOjA4CjR4+yfft2Dhw4wK9//WsSExPZvn07vb29/O53v+O73/0ufr+ff/7nf0YU
      RdauXcvdd9/N/Pnz+dd//VeGhoZ48MEHWbx4MR988MHocsm/+qu/ui2yv30VkzAWyMUnu/dy
      rnsYjdFO0R3rWDQr4aYrNTDYyaEP9sCMtay5YwaGz52f6GjQ5bMz+Nttd47pmvLycvr7+1m7
      di2SJKmxQFdhEgpAQY7IyIoCwsgimFsxDq0oysiyQo0GzVV+TxRFnn3tkwlLC1Q0I54tq8a2
      IP1yNgdBEAiFQqoArsIkFMDkRI0GnVjUaFAVlZvA5OsET2J+v6/ipgbDJTitbFqa9/UFVcYN
      VQBjYMfhmptaf356rCqAW8y0FIASCdPV1oQ1aSZRk3itt8fj4eDBg8TFxbF06VJgZH+vd999
      F4PBwObNm4mNjR0tfznlYWlpKU6nk0cffZRQKMSOHTsYHBzknnvuoaioiEgkwrFjxzhx4gQz
      Zsxg48aNWK2TPwfSzeC26QMMnP+Ees+1lVUiEm0XqxkKKvQ0VnCmpoPIzTVvzITDYXbs2EFn
      ZycNDQ3AyAv+5ptvYrPZiEQi7N69m1AoBHyawOrVV19l0aJFzJw5E1EUeeedd7DZbMyePZsd
      O3bQ39/PhQsXKC0tZcGCBaSmpk7kbU44k6wFkPH1tVNd30JANpCeX8wMp8zFDh+5WUmAm+aL
      AVJznHScP0frUBB7YjaZUUFOnzlDX7tIV1IGi7NjccsBXM0dyPFZxAt91DT0IOms5MwqJvEz
      uzKZoxNIidhRgh7qa6vocoWxJWZRlJOGUTdxIz56vZ4nnniChoYGzp49C4y0CMFgkC1btuD1
      etmxYwder5eYmBhkWaayspJ169axevVqYCQThNfrZd26dcTFxeH3+zl//jxVVVU88sgjFBcX
      T9j9TRYmWQugIIZC6E1W7CY/ZyuaUEKDlJ27vBCln3NlTYQGajnZ5McRZUcrR9AYrThsVhzR
      ccRGWfD393Dyoz9R4wKLSY8UDKGz2jEhUl9TR/AzvzjQ3UBz+xBSJIKEBrvdTF9TAz3uybcd
      kiiKREVFYTQaMRqNo6EOMNI6DA8P8/rrr7Nlyxb+/u//nkgkQkFBAT/5yU947LHH2LlzJ52d
      nfT19fGb3/yGLVu28Nxzz+F2u5muo+GTqwWQI3gGuqg9X49b9DHkT8e19Cop+ZypxIeruFA/
      TFqmGX1UBlnJiZjziyhywlDjMKb0+axaUIJOI1Ff20Z1XRdBfwhtbDaFxV9cWRUODtFWV0e7
      y89wj4StuJiMmMnlF+v1evx+P+FwGEmSMBqNo+PigiBgs9l45JFHuPPOOyktLWX37t088cQT
      rF+/nmAwyNtvv01ycjLd3d089thjZGVl8fLLL3PkyBE2bdo0wXc3MUyuFkDy0ToQ4c5N3+Lh
      zStJtptAAE04RFAKM9DQwqCsQEhD/qp7uXvlXKTm83QEQVZ8uFyhS9t56nE6bQgaAfDR0a1h
      /bce58GNdxLzJRtAujy9WNKW8ugjD7EwL4EJ9H6+FJvNhtfrpaamhqqqKlwu12gOT61WS2pq
      KnV1daOJck0mE/39/QSDQRoaGjhz5gzFxcUUFBRQXl5OJBJBq9ViMHw+8GP6MLlaAL2DglQT
      e3f9EUNKGgnJCejMKSzNvMBLz79EbE4qGclJaIUwVYfepaE3QOqcu8gyg5JTwMF3X+SFxPls
      W5iOIxK5lN8zirwcLXt+/wL21GIy02IxaDVExSZg1oFijSbKYCI+JpPa06W8XG8hLTaFJPPE
      vhR+v59nn32Ws2fPIssypaWl/M3f/A0PPfQQzz33HFarlR/+8IeEw2H+7d/+jfvvv58lS5bQ
      19fHo48+SnFxMT/60Y+orq7mueeeQ6vV8swzzxAXF8eaNWt44YUX+Pa3v83atWtZtmzZhN7r
      RKKGQlwjtyIYLj89lv/3e+vHdE1TUxNlZWXcd999X7lZtRoKcXUmVwswyZmZHsvNnApOT4z6
      +kKfvyY9nZSUlGntxtwIagtwjajBcBOLGgynonITUAWgMq1R+wBj4Cf//eENp0ePshj5+8dX
      jpNFKjeKKoAxUNPaf8N1xNivfVMLlZvP9BaAoowuvbzaMsibTV9fH//+7/9ObW0tADExMfz4
      xz+moKAAgN27d/PCCy9cMlVh8+bNbN26lTfffJO9e/eSn5/PX//1X+NwOHjllVfYu3cvDzzw
      AA8//PCU7azfaqa3AICWqk8Ix85mZsqtzwMUHx/Ps88+C4DX6+XFF18c3Z4UYPPmzWzevBlZ
      ltm3bx9Wq5XGxkYSEhJ46aWX2LNnD0ePHsVisRAOh/nNb37Dr371K+rq6sjPz7/l9zMVuW0E
      4O04y7sflCNqHay87yGyg1X8qbyN4a4urJnzWLeyBE1vJXs+Oo0noqd42T0syInGYDCiMRoY
      Gqij7nQzTT2dEFfAxtULcd6inegVReHEiRPk5uYSFfXFuQBRFLl48SJbt24lISGBOXPmEIlE
      0Gg0REdH09XVxZ133klMTAx333039fX1qgCukdtkFChIw5mLJM5bwV13LSJWB/h68NoKuf9b
      3yLX2MaZqi40RjvZhSWUFGbTXf0JvQFw93Uw5I8Q8PTRKzq5+77NZJuC9Ht8t8z6wcFB6uvr
      Wbp06RdcF0VROH78OHl5eaP7e/X39/PGG29gMplYsGABMJL5DSAqKoq+vr5bZvtU5zYRgIns
      eYXIXfWcO3WKup6RlTHRCUnYLBZScrLR+T10NNbQ2T/IsNuDP+BFDH2mCoOVrKxMoh12ohw2
      buUuqfX19cTHx2OzfTEZr9vtpqKiYlQcQ0NDfPjhhxQWFnL33XdjNBpRFAWXa2S/5O7u7ivc
      KJWv5jYRQAhvQEtadi456Vb6e70ADHU109xUx7nyGoxJSYRdItEZmaQlRKOZJLs9SpJEZWXl
      aPZmGNmcemhoCFmWqaioID8/fzRDW0VFBb29vYRCIU6fPk1PTw95eXns27eP/fv3s2/fPkpK
      SibylqYUt0kfQIdJH+b8hVYiumgWrUiCzgsMdTVS7RdIzFnG3CwHYUcx3WV1tDuSmTu/BKcJ
      bJkFSFF6rEISOp0N0BCXkorW8uWBZeNJOBymsLCQ1NRUBEFAkiReeeUVVq9ezdy5c3E6ncyc
      OXPUNYqKisLn8/H+++8DsGLFCpYvX87w8DCnT5/m/vvvJzk5+ZbYfjtw+8YCtb37hdsAABPT
      SURBVB3niLSQFTPGJ3ZkvKJBY+xmXvzpfV96vre3l7KyMu6++250uvH7PqmxQFfn9hXAOCOK
      In/8sPqGHSeLSc/Da279WlxVAFdHFcA1okaDTixqNKiKyk3gNukE3xoUhTFlTxAEpmyLMV1Q
      BTAGHvjZ62Mq/4MHFrFhUc5NskZlPFBdIJVpzZQVgBzyUL7/LZ5/4WXOtk2+JFafZ3h4mGee
      eYZvfOMbPPTQQ5SWln6hTHt7O9/+9rd59dVXgRF3q7GxkUcffZSdO3ciyzKvvPIKDz/8MI89
      9hi7d+8e7RyqXB9T1gWS/H785hS2PLKEaNPk17EoihQUFPDzn//8qgFvl2N+UlJSMJlGMvaG
      w2GOHTtGUVER4XAYn89HXV0d//Vf/4XP52Pnzp14PB5iYmJu9e3cNkxRAfg4sXcnRxoHqbjQ
      wLL5hQxIJjSdp/Ekr+QOZwf7j1Tiky3kL72LZdlWzpw8SmPnEENDPtKW3su9c2KoO3GAg5Xt
      6GJnseXeeXSfO8qxyjYMcXmsXbeMFMf4zQYHg0GGhoaoqakhLi6O9PT00UwOlxPbulwuVqxY
      QSQSQVEU6uvriUQiLFiwALfbjcViISYmhrKyMiKRCHFxcaOJsVSujykqACuLNz6AqaGdgjnz
      sQ9U8OqxVooX/BkrMpx4uwKkpmXgcvVTV9vAgtRCRMXIvLUPka1vpvS8j+HmfuoiKTz19L0Q
      CuHuu8CpynacCYkEuqooa5zFfSXjF1JgsVgwmUyUlpbi8/m45557WLNmDTCS9Pbo0aNs2rSJ
      qqoq/H4/brebjz/+mAcffJDq6urRDauTk5MpKytDlmXmzp2rjjLdIFNUAF8kKqOYosxoBEWm
      tbYGU9pcZqT3cbzRj6zImKNiiXNY0MtGjNoIoRBExTjQawQw6JEiIaKT8ikqyUZHCQbH+LoV
      drud73znO5jNZsrKyjhz5syoAC5evMjOnTvZuXMnAwMDGAwGqqurOXLkCKWlpaPH9Ho9ra2t
      PPPMM3i9Xl555RVcLteoy6Qydm4bAWj1ejSMbOKo00FfawN+wY8/9MUQYxCITUtEOVbO+90t
      aA2xlBQmoQkf40K1iFEnEJsXQ6Jz/FyghoYG3n33XfR6PQMDA6xbt46BgQGqqqpYvnw5u3fv
      BuCDDz7A7/dz33338dOf/hSAQ4cO0dvby4YNGzh//jzPPfccsixjNptVF+gGmbKhELIUwhcQ
      MVvt6CQvgyEDMTYDKApBbz9d3cNoTFYMFivxDjOBoIjJYkdPgEGvQkyUieBwH229LjQmJxmp
      MQSH++gZ9IDWRHxyMlHmT6fdrycY7rPzAOFwmIaGBnp7e4mJiSE3N5dTp07R2NjIY489hkYz
      0pEfGhoa9e8vMzw8TDgcJj4+np6eHhoaGhAEgby8PGJjY6/JDVJDIa7OlBXAreZGBfB5ZFmm
      qqqKxMTE0ZVeNxNVAFdHFcA1IooiZxv6xhQNmp0cTUL05NhjQBXA1VEFcI2o0aATixoNqqJy
      E7htRoFuBVVNX51tISvZiW2CN9ZQGRuqAMbA3z//0Vee/3+2r2ZurpqRYSpx+wog5GUobCTa
      OlafUSHoD6AxGDHort9f9vv9dHR0EAgEcDgcpKWlXbHGNxKJ0NzcjM/nIykpifj4eAYGBujq
      6sJisZCRkYFOp2N4eJiuri4EQSA9PR2r1Tpl+yGTkdtXAB0n2dtTxLYliWO8UKLlQjWGzDxm
      xI19x5bL1NXVsWvXLiRJwuv1sn37dmbPng2MxP58/PHH7Ny5E7vdzpIlS1iyZAn/8z//g9/v
      RxAE1q5dS0lJCS+++CJDQ0MEAgHmzJnDo48+OmU7spORmycAJUIwKBIOhQhHFIxWO1ajFkkM
      4PEFQWvA4bASCQbRmEzoFAmvV8Ros6FVwoTDYDDpEWQJn9dLMBwBBCyOaEyaMF6Pj7CiwWKz
      YdKB3+clKEYQdEYcDiufviIyQa8XfyiMoDVgs9vQCRJ+bxApIiELOqxWK3qNghjw4RcDePwi
      NxoIMXPmTH70ox+h0+nYuXPnFdna3G43Bw8e5Ec/+hHJyclIkkRNTQ3p6ek8/PDDdHZ2sn//
      foqLi0fTIXZ0dLB///5pu5/vzeLmCUDs5+j+owwHIoTFYeS01TyyIp4Lp8upa+9H1unIW7AG
      R9NxPHPXUyxVs7O0lrnr7yedairbnCy9Iwud5Ka67DgNXd00t3vY+MTTJLgvcLa6EW8YnJnz
      WDMvmvOfHKep34cga5iz6ZsUjBoSov7UYap7vKDXkz9vAwVJbez8fTmWRAPDgQhz7txArrWX
      jw+fwS2D261lZf6NZW4wGAwcOXKEkydPotfrR+N+YCQVoqIolJaWEgqFuOuuu0hISKCqqopf
      //rXyLLMwMAA4XCYtLQ0BgcHOXLkCIWFhaMzxirjw011gTS2ZFaumk+suYs9H3oJ9TRw+MRZ
      ZIMJIezBbyrgoXlOauv7iBH8ZC2cQai3m2GxC2t60YhxhhgWrtlIWuN58gJOiqM87Nt/groh
      GaMmRFuXjpIFazAKMq7hAURXL9UtGylwXDJC0aLTy/iGh/EEfQhRneQma4ibUcKq9bPob66k
      P+zH3dNK7Lx72Zhjpv50BcYbfM8EQSAlJYXZs2dTX1/PwMAA8fHxwMgsMEBGRgaRSITXX3+d
      p59+mqeffprW1lb8fj/nzp1Dq9XS3NzM+++/z4oVK8jNzVUFMM7cVAFoTRZsRh0avQ69IKAo
      MgmFd7Fp7VzMgoTPH8Zsl7Ae28eZxHxWpMdT11pNTXcUS++41HlVwvS31NDmjWLunEx0gR50
      sTk8cM9KMmMNBNw+gi21tJjzeOo7G3FXvMv+z66SctdSPZTOt7bfg7vtBOX1EjI6jBYbJr0G
      rU6PVgE5EhnZAFKREMUQ+hv0NHp7e0lMTCQ3NxeDwcCJEydG8/7Hx8fjdDqZO3cu0dHR1NfX
      Mzg4SGZmJpmZmRw8eJCoqCg0Gg0HDhzg3nvvJTU19cYMUrkqt7QTbEzMJ/Pce7z0/Al0ehtF
      S9eyuDCZGKOHVkmHJcYK5W247Gu4/AEX+5t4b9d7DOuclB+Hhfc+zuw0PXve+j2SRkdCRgl3
      LYlDc/IQv60+RZbdD58NvzEnYfe+yysvnMGZaseqj76qbY6EdE5+8CrnPzYgCNGsmHlj91pR
      UcGrr76Kz+cjNjaWv/zLv6S2tpazZ8+ydetWFi9ezE9/+lN8Ph/r1q0jPT2dX/3qV5w9e5ak
      pCSeeeYZ3G43v/vd79i1axdarZa8vDx+8YtfjPts6HTm5oVCKJ/upiUIIylFLv97+SeFkbwh
      oMjA5aE9BRBGh/oURbmi4/fZ45crFz7zeyOnR45d/r8iX7LlctnP2fVFm4UvpDS5lmC4z84D
      KIoy6uoIgkAkEmH37t1kZWWxYMGCK85fdmsu36sgfHr/l8tcRqPRXNcwqBoKcXVuXgtwlZft
      8r9f+AMKn/Vrrzz32Zfh88e/6vc+W5Og+eK5z9v1ZXVcL4IgXPGyybLMokWLRvsBnz9/+djn
      maov7FRBDYa7RkRRRJS+uozFpEd3KzcWGANqC3B1bt+JsJuA3TJ1o0FVrs7k/FypqNwi1BZg
      DLx5sPorz6+am0lizNXWIKtMVlQBjIE/fFD5lefz02NVAUwxVAF8nohIR3c/zpgErObr73D1
      9fVx6NAh+vr6mDFjBqtXr74ifUl1dTUHDhwAICcnh7Vr19LU1MSRI0cwmUysX7+e+Ph4Wlpa
      OHjwILGxsdx1111X3UhP5fq5ffoAkRCtdefo8d5gPXKQ+vo63L4by7nZ1dVFKBQiMzOTTz75
      hDNnzoyeUxSFw4cPY7fbmTlzJikpKQQCAf74xz8SHR1NKBTijTfeoL+/n7feegtBEKiqquLg
      wYNfmBdQuTEmZQsQFj10NrUw6AsgWOPJnZGORSPS1dJIx5CIMzmLnBQn3qFhFK1EZ+sgJq2H
      isoLGDuDZM/IIcPuZ1iXQopDS2CwA7cugXiLREdDPd0uEYMznpz0dIRAFw1NXYgYSZmRQ/I4
      fWDnzJnDnDlzcLvdX9i3NxwOEwgE2LZt22ie0O7ubsxmMxs2bGB4eJgPP/xwdG3Atm3baG9v
      5/3330eWZTUeaByZlE9S9PVScbaWgKzQfeE0Zxq76Wk6R/mFDhTZT9XxT2jx+Om8eJ7DHx2k
      0xdBo9Gi1WrQaLVoNAL+5jLOdY0M3A81naGmO8jQxRMcq+lFRqKp+gydrhAhv3tkfD84yIX6
      FoKR8bmHUCjE888/z/e//30kSaK4+NPo0nA4TF1dHdu3b+fpp5+mpqaG+Ph48vLy+MEPfsAv
      fvELCgoKMBgMREdHo9frcTgc+P1+tQUYZyZlC4BGT1LWLOYunIWQYmR/e4BBqZ/MkruYnWZh
      yLiHss4QGZJM2oI1zMuIAylI0O/FnLOATCcMfWH5rkJ3S4Al39hIhiJyNvgRMuAd6qbufAMu
      nwevPZ+FBeOzpFGv1/Pkk09y//338/bbb1NeXs6qVauAkTyhzz33HJFIhO7ubn7zm9/w6KOP
      0tjYyLPPPktfXx8fffQRK1euxO/3E4lEEEURm82mzkOMM5OyBQAFWZFRZIn2th40eg16vZaB
      vn6ksI+2bhGHTQCDjVi7aSRcAggGAgRFETkSAUEgLIaQxGGa2wcAMBqCdHR4iEhB3D4RFOjr
      GmTB5sd57IF1pEePXyrE2tpaenp6cDqdJCQk0NLSMnpucHCQQ4cOoSgKJpMJjUaDy+UiGAxi
      tVpxOBy43W4MBgNdXV20t7dTXl6OTqdT3Z9xZnK2AJEQDWX7KK84RkJ2CauXZ+CQLPQdOcBv
      y/wkzVrMhiQbfR4bRt2lF0JnIM5p4sNdL3JxzkbWzlmA9Ppr/LbcQXZyHHEmHUlFhZwrfY0X
      RAOGKBtJGoGk9Dg+2PEiprg07ImpaLU6HI4oDPobe9GGhob45S9/SX9/P4WFhfzgBz/g2LFj
      nD9/nieffBKfz8cTTzyB0Wjkhz/8IXPmzKGrq4unn34ai8XCU089xcyZM1mxYgU///nPycjI
      4Hvf+54qgHFmUsYCeYdbqa71UrK4kPFMMtJfe5zD5ztRAKMzlaV33kGs+dpeqLFGg36eUCjE
      e++9x6xZs0bXBdxK1FigqzMpWwCLPZnZc2TGO+o9KrOYFc5sZAQsdie2Me4sk57g4Ks+FybD
      lz9OnU7H+vXr1VTmk4xJ2QJMRtTUiBOLmht0ghFFcaJNuCFkWf7StRVTgc8vHhovJqULNFmZ
      yi1AKBSa0qNIkjQyp/PZ5GLjwdR8Gioq44QqAJVpjeoCXSPj3fTeanQ63ZR132D8ff/LqJ1g
      lWmN6gKpTGtUAahMa1QBjBHJ087BPe/ypw9O0B8YmZzpra9nGFDkCO0N1XQPBce0md54oUgB
      Ws9/wu6dO9lz8Cw+SQYkWiuOsGvXnzhR14MCSJ42GrsCgIKnr426lm4ik8gTDgy38NGBTxj0
      hoAIQ01n2b1rNx+VNxCRFQh0Ud/qBiDkH6C2ppFA5PrsVwUwBpTwMGUfn8GUVUSeY5BDJ5qI
      AAONjbhRCPTXUlnvxTjmTTnGA5n+9gYahzXMX7SALOEiR2rcBFrPcLJdy+y5M3GfP0x1fwTJ
      10lbj4gi+ak6exZJZ5s0L4ISCdJw+hjnO/vx+UOIvQ0cOtdH4bxi9K0nKesMgdhHY6d3pOyZ
      EwxrnRiu8wam9tDGLSY8PIDLnsbqmTMwaePofecE/cpIElHZ10PZ6TYKl68n+nr/GjeEQFxm
      EasyBQQkBl2x9GoitDS4yF+8hOw4G06hj7NNveSkA4TpOFuGP3kxi1Jt45YR78aQGWqsoMtc
      yOy0QQQU+rpdJM3KJzcjg2z7EDvPdKLMHynbX3+WFm0e6/JiuN4Aj8ki/CmBJAlYrUY0ggCC
      HZvRhScAQe9F3nz+HYbicsmwT9QjHclnqkREGs+f5Lw7jvnZZkTBjNM08npo7XZwuwlJIqdK
      X2ZHlczCWQnX/fKMN5Knj5oemdmz0i99mRVCgga7cWSdhsbpRD84hAg0HH2b1452UjAz7Ya+
      4qoAxoBOqxAIhEYS8yp+gmEHNjOYbLk89MQmdN31dHi+Jn/iTUQR3dRXnGRAn8vSxbNxGHQY
      FBFPaCSORg4E0NjtGHRGFm7cxsbMEOW1fYQnifvfWvMJ9c091Facpv5iA+fOXURUZHyhkb6W
      4vUScUZhBHKWPcD982OoqWsjdAP2qwIYA3qHA21fG00DHgYunqbFkETMJd9B60xnxfw0qj85
      g0tSvjJs+uYgM9DWSq8+iZLcGISIRETWkZqipfpsEx7fIDWnG7GlxY0UF8zkLl2Otr2Mph7f
      pNh6KTatiPlzc4hxRmGxmLHbbCTEmGipbcTl91B9rBp7VtIld01HWvFCUsMNVDS5rtt+7T/8
      wz/8wzjew22NoLOSnqTjeOlezg3Y2bBuAQ6DFtHnw5yUTLQ9Fr3YzVDYQpzDzK2deJUZ6r3I
      2aMnOVl+hjNnztArJDN7zix0nafYc+As9uK1LM11okgBRJwkxNmJs+to6XaTnBAz4tpNICZ7
      DImJiSTGx6DVGcjKnkFsQiIJUjvv7DmCP3kRG+Ymo5FFfBEbSfFRRMfF0N/ahCU2CZNu7Par
      M8Eq0xrVBVKZ1qgCUJnWqAJQmdaoAlCZ1qgCUJnWqAJQmdaoAlCZ1qgCUJnWqAJQmdaoAlCZ
      1qgCUJnWqAJQmdaoAlCZ1qgCUJnWqAJQmdaoAlCZ1qgCUJnWqAJQmdaoAlCZ1qgCUJnW/P95
      wCWnv1+xfAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='treemap age' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='treemap book rating' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='year of publication' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dWWxk15nff3epWytr5042yV6p3tTaLdmW5FiWZmJ78uA4SEYTIBMngwCZ
      12CCAEGcAEleMg95mRkgyIsRZCYTZ8aesUfQYllSS61WL+xuNvd931nF2pe75YFsNovFKlIW
      u5vddX5AA817v7rn+27d/73nnLrf+STbtm0EghpFftQOCASPEiEAQU0jBCCoaYQABDWNEICg
      phECEDzR9Pz6r/jJzz/GqjDZqT5kfwSCA5FZn6J32uBMMM280sLG4BWWij7eeuM5Pv3lu+S8
      Tfz959t4r2eaxpYuvnbxOAC2pXPrs18xPJ/hxW+8xLvvfUzjSz8oOfbVD37BYiJDw6kXxBNA
      cDRxeYOM913jw6t9aOkh3rkywvLoXSZm51nayHLj84+JLUxxczLHM+e6tj9XXJ/hzhJ8740T
      /Prjcc5evMhvvf41ZEnathkbmeLV777ByBefCwEIjiaKK8C5dpm5YoS25jbqfQ6aOk/gzC6z
      kLTw+9wAtBzrwKncv7gdvhDyxiQ/+5srtJ3u2PPYZi7GO3/9S5RIC5L4JVhwFNFzSX7+l/+b
      06//Iy4cC2HoOqZtozkc6LqOJMk4VBnTlkivTfDBr65RBILNp/n2N5/GNm00zYFtmsi5Vf7P
      Lz/Csmy0UBv6whhvvv02Qc0hBCCobR5JF8gwjEfRrEBQxiMRgHjoCI4KYhAsqGmEAAQ1jRCA
      oKYRAhDUNEIAgprmqwvAtskmVpmYXQbAyCe5feMac6tJ4vE4YBNbXUE3xcyP4OjxlQVgAytr
      K8TW4wDcvnGTpuOnCfqczM3NkYktMLWcQhHPGsER5Cu/DSpJEp0nTpC6OwNAMrHO4O0emo6f
      w0yv8OGVBV57801kSULXdQBM0xS/BQiOBIf+OnRduJkLzz3Dret3cdY18Eq7k8mpBS6ebsXh
      cGzb7fy/QPCo+MoCsG2bO59/ymLCQFednD55jGtXrtF6+iJu8oSbm8hOT5HXLdwO0Q8SHC0e
      yctwuq6LJ4DgSCBuyYKaRghAUNMIAQhqGiEAQU0jBCCoaYQABDWNEICgphECENQ0QgCCmkYI
      QFDTCAEIahohAEFNIwQgqGmEAAQ1zVdPibRtpkduc/X28NbfJr2ffczocpzJyUlss8jw4BBF
      kRMsOIIcyhOgvvUYnq0lqrNrs8QKKqZeJJ1Oszw1guxvwLFjCWuB4KhwKDnBHq8HCcDWuT0w
      S3uTn0Q2j5Ra4casySuvdyOByAkWHDkOJSVycXqChYVlwlEvfr+X+fkFcl6bRl8Dbz7dwu3B
      QS5dOo8mcoIFR4yvnBJp2zarCzPkDHD5gjREApjFAgYytmngdrvIptNobh/qVjdIpEQKjgoi
      J1hQc9wcnuP60BwgqkQKapDrg3P8yc8+B8TvAIIaRwhAUNMIAQhqGiEAQU0jBCCoacQskOCJ
      wjAt0rnCnvu8Lg2HqpRsEwIQPFEMTa/wu//pz/fc98f/+rt854XTJdtEF0hQ0wgBCGoaIQBB
      TSPGAILHij/607/bc5D78vkOfu/NZ7/08YQABI8Vn/fPsJHOlW2PBLy/0fFEF0hQ0xxKTvDC
      5AA37o4BMD/Wy4e/+pChmVVmZmawLZ3x0VGREyw4khxKF8gbiuBIJwDwRdv5Zls7dwaXKao6
      LjuD7oyKnGDBkeRQcoIDwQDy7KYA3Br0D85w8sxTTN25zBfTOt9844zICRYcEntfN5ZlUSwW
      MQyj4icNw6RYLGJa5va2Q8kJjq8uE4uts76RZqy3h+aTZzEKBWRfA98530jvwBDPXnpK1AkW
      HAJ79yRkWUbTNFS18iWtqgqapqHI91+HOJQuUDqZob4+QDqbp6WtldRGHNNS6OzsxFXno/u4
      Y+uOL7pBgqPFoXSBjp08u2NLtMzGHwx91WYEggeCmAYV1DRCAIKaRghAUNMIAQhqGiEAQU0j
      BCCoacTboIIjw5W7U0wsxsq2u50OfvDahQfSphCA4Mjwy8+H+Nsrg2XbowHvAxOA6AIJahoh
      AEFNIwQgqGmEAAQ1zYEEkFiYYH55kb/5+d+xntEftE8CwUPjQLNAw1e/YMEFq3GZsblVImda
      7u+0bWw28wJkWca2LSxr8/8AksT2q9CSJF6HFhwtDvQEOPncBfRChBfPtxEK+kr22cDwnc/4
      8EovAAPXP+aD99/j9ugSfX19GPkU12/cQbcO3XeB4CtzoCdALpdBVU3u9k/x6vFLJfskSaL7
      0vPod2cAm7wS4K03v0bPrXEMK8mNm710XXgeTZEwzc1UNMuyqqauCWoTq2KarL3jetnbxrY3
      bXamO+7G3LruLPv+3XgfAehc//A9hhdi3L78MU3Pfqvkw3s7Ym05KSEpGh5NJ1/YdP5eF0iS
      RHdIUE61K2K/60Vi/+vq3n5pR0v7CEDl0jfe4IKh89KzT2O5I7QGSxcgsm2bO59/zNBMEl11
      4lfyvPPuRxx76kXk3Crdp7q4fWeQhuDTuB33xgUSiqLs1aDgCaVQNEhVWLY86HOjKnKVi3fn
      9VLBZuuakqXKvXp5y2ZnO/sIQMKhOZm78S6fLjvR4tfQ3/yHnG8L7mhX4tIrb3HplXtbOri/
      APVmeuQzzz1TvRnBE8+HPWP80Z+9s+e+v/yPb9Pd0fCQPdrkQINgy7RQNCeaUq2fJhA8fhxI
      AMdf/m3OBQw6nvsWZ1uD+39AIHhMOJAAZm++z7XpFHc/fY+RpeSD9kkgeGgcaBo0nysSaW7D
      JScp6pWnmQSCx40DPQFOff23aSwsEjzzIufbxRo/gieHAz0Bxj77Bb0xFefY+0SaWjnX4n/Q
      fgkeI1LZAq/+4Z/tue8Pf/AKP/ruCw/Zo4OzjwAMJgb66B2eJ9L1PE4pST6XB4QABKWY1t4/
      kNrW0Z413Pd3AI/Pz9lX39r881gTx9rCD94rgeAhsY8AbEychH0OfK1teGXx+oLgyWJfAfR+
      9h63745R/9xzRGQXL3zrNdqCv1k9JoHgqLGPABx85wf/mObWLygEAni1OoJu7eF4Jjgy/Nf/
      9WvG5tbKtp9qj/Jv3/7WI/Do8Nh3FkjV3LTWw59fvotm5vHU/x4+pyhuUUsMTC1zZ2yxbLth
      Pv5JHgd7F8gwkR2uzXeBjvioXiD4Mhzod4DGC9/m9zviWA4PdW7ng/ZJIHhoHEgAydVVtGgU
      OZ0glZWo81QeBwz3fMbMepaGzrN4yHKyq52+gTHOnDuHJipFCo4Y+wogtT7LX/6Pn+B74SWY
      n+bkN7/P8ycqv7u9kbd4/tlzTM5nyNlpJkcG8TWdxKFIJZUhRZXIJwPbtqt+lzab+6t92/eO
      UfUo221UsbJtqh7FLrfZVwCKw0XzsWM4A34aWl+lu7O+irVFnUtlcHgSV6AFK51gYtXkYrsT
      CTBETvCR49c947x/Y3TPff/h99/A6VArXuDbebhm5e/y3ndtmVVydU0TwzC20mn3Zr/rxd5q
      x6zWjrXZjmUdOCcYPP56zp5q5J2+AeYVN3WNTXRF6iq5QSKZRvPWkclk8HsivHaxnVt9AwSe
      uYhzq4SlbduiTOoRYWo5wbvXx/bc9+N//hYOh6NiqqIkSTgcDtQqS34osoLD4aiaAquqKg6H
      o0o6o7Tjeqngiyxv+qJUKZOqbPnyZcuk2oUCl/7e73A+7MDtrfYjmMLzL3+DdK6A11eHZFs4
      HCqXLj6FKn5FFhxBDiQAT0s789c+YA4nX/vOtzkW8lW0dTjdhJzurb82laY5xcyR4GhysCfA
      Vv8qldggp4vBq+DJ4UACaD79LP/k9LMMf/E+6VQeGiqNAQSCx4sDCWBxpIdffdEHziBvnRW5
      AI8LK/E0f/7B7T33/fbXznC6vdqMXm1wIAHU+Zxks3lkK4dddf0uwVFiLZHhf/7y+p77ujvq
      hQA44LtAIzdu8eIP/hkvH6/bs4iZQPC4sq8ALMvk7CuvcPNnP+H6bI7TbdGH4ZdA8FDYd3Hc
      y+9+wIVvvcmP/sWP6L/6ISsbGcKewMPxTlCVP/6LT8jki2Xbnz7ZzD/4xrlH4NHjx74ZYen4
      CmuJLEHVyfLSEuFmsS7QUeFvrwwSS2bLthcNUwjggOwjAI1X33iVd977Kz4tWrScusS5NrEu
      kODJYd9ZoLqGLn74dufmH5Ik5oAETxQHmgYVxSwETyqiTKqgphECENQ0hy4AyyiwtDBPMlMg
      l8sBNrlMBlMk0wuOIIcugMFb11iKJcjki4yNjVFIr9M/MlU1JU4geFQcaBD8ZVheXUH2WEQa
      2zHTK/zq0xVefu01VFlC1zerzJumKXKC9+G///QKv+oZL9se9Ln4yb/74eYfFc6hZVoUi0UM
      vXIaoWGYFIvFqimEul6kqFTO37Ztm2KxuP297oVpbrZjGFXaMQyKxWJJquKuligWi9v/3wvL
      2oq5Surkdsw7SqkeugB8oWaeef4S17/oxeVv4FLUZHk1QfBYBFW939zO/wvKSWYLLKyVV+PJ
      F/X76YEVZudkZSs90FElPVDdP1XR4dAOlBLpMCrfzJStNERVrdLOvZRI+TdPiZTvpURWua62
      Y/6yKZFfho7mIJcvf060vRuvUqC5s53k0Ch5PbRdJhXE1OpX4SDn7mHZPO7tHLoAGjvP0th5
      tmRb99mzFawFgkeLmAYV1DRCAIKaRoxEHwFLsRR3x5f23PfS2Xb8XtdD9qh2EQJ4BNwZW+Tf
      /Mkv99z3Fz/+Xc4KATw0RBdIUNMIAQhqGiEAQU0jxgCHTFE3+dOffb7nvpfPd/DiU+0P2SNB
      NYQADhndNCuuxeNyOoQAjhiiCySoacQT4EvyiyuDLMVSZdsbQz6+/3XxysfjhhDAl+T/ftTL
      rZGFsu1Pn2wWAngMEV0gQU0jBCCoaR6AAGyKuSwFw9zKFLIpFgpYIgNMcAQ59DGApee5/O47
      1D/7DaTECt0n2rgzOMulSxeQKycFHQk+uDHK310d3nPff/6Xb+F2isJ+TxqHLoDFqVEaurpx
      yFDIxrh8dZ2LL30dhyJt52tallU1j/RRMT6/xgcVSob++3/6OqoMdoXVLWzbRtd1jCpxWebm
      U7FaWVHDMNB1vXJ+rM39c1cpV3fr/FbLjzW3ntA782N3oxs6ui5VzQnebKdKTrB1L+bK7WzH
      XLFMqr3jetkn5mrn1iyP+XAFYCS4cu0uLpcDfbWdroifDq/BRiJLxBvYzj+1bfuh5wSvJTL8
      v4/69tz37edOcLItWiUnFRRVRVXVqvmxqqqiqJVLhsqyjKqqyFUehYqibLVTwRdpRz51RV82
      26mW7ytvtVMtZvWgMSuVL+7tmKv4sm/M7J9DLsn7x6zI5TEf7lWoBvjh22+TXJ4jhhs9GeP4
      iQ76+4bI159/pDnB64ksf/Kzq3vu62gKcaq9vqpPkiRt7q/i9rZNZYN9baRtm+rtVEXa3xfp
      nk2VgCT2iYcDtLN1jGpH2Y652lG229jn3FXdX27zQG7D/sY2/ACNEQDOX7z4IJoRCL4yYhpU
      UNMIAQhqGiEAQU0jBCCoaYQABDXNE/M26MjsKoZZPgcf8LporRdVLQV788QI4F/9t5+xlsiU
      bf/eK938lz/4rUfgkeBxQHSBBDWNEICgphECENQ0QgCCmuaxGAR/cGOU/qmVsu1uTeUPfuel
      R+CR4EnhsRDA5d4p/vpyf9n2oM8lBCD4SogukKCmOXQBJJYm+ejXnzC3nmJldRXbtlian6No
      ipxgwdHj0LtAGV3h5VcucufuDE6nhdNMs5xWaVT2TlQYmFrhpx/17rnvR997kdao/7BdFAi2
      OfwieY0RRofHaes6zsrIF3w8Pc9rb76FxP1c1oW1BLphcawxyPTSOj/9eO9Uxe+/0k2934VZ
      sX4sB64fq1etH2scrGZuUaqaE1wsFtGL1XOC96tlq+tbvlTJCd6OWdQJ3uY3rRN86F2g0eER
      Wk520xLxofgaeP3FM4yPTmPDZk1Zh4PrQ/O83zOBpmlVcz0dqoqmaShV8lY1TUPTNKrVj9U0
      DUfV+rFb7exTM1fTNCS5cn6spmk4tMorR8iKsn/Mjn1ilnbEXKVOsKZp+9YJPnDMVXKCNU3b
      UcO3HGU75up1gjVNq1on+KDf8351gjfP7QOsE1zMbnD9ymUCjV20NzVRF43SasxR0C1cDjHm
      FhwtDl0AF1/6Vtm2xhaxJLjgaCJuyYKaRghAUNMIAQhqGiEAQU0jBCCoaYQABDWNEICgphEC
      ENQ0QgCCmkYIQFDTHLoAZod6ePe99xlf3GBiYgLbLDDQPyDyAQRHkkMWgM1iQufbr79EfHGR
      VCbNwsQwWrgFR4V8AIHgUXLoAlAdGqpDQ7EMjPQad8aXCfm9VSuECASPikMWgIxc2KDn5i1M
      TwDNV88brz7H+OAgxT3W7RQIHjWH/jr0+WdfYn0jQygawdIb0FxOLp51ojzkmmACwUE4dAGo
      Tg+NjZ7NPxQXAC6PF7ifWud0KLg1Fdu2cSgy4Tr3nsdS5M0SnR6XY0+bgNe1fcygz7VnSp3X
      pWHbNoosVWzHocrYto3LoVa0ARvbtvF7nHva+D3OTV9sKh5jO2Z1/5i9Lm1Pm6DPvR1zyOfa
      My3S63LsH7OibMasHULMVI7ZtRWzpioVbeR9Y77/PYfqXOyVlHegmNWtmJ33Y5bsSgmfD4Dd
      +ZqmaVZNyTuIzT33q1UqPIx2YDPvtFpZ0f32H5YvIubDa+eh/g5wr+7svX/3asiqqoos2aST
      CfJFE0XZ2wazSCKRoGjaJft32mzbGgXyBmXHsIwChrVZ39Yw9O0atds2ioJpmsiKQjadwpaU
      7fqzZe3YOvFUvsQXRVFQFWW7Vq9RyJX5u/MYigyri4sUbbnMxtKL2FJ5bDtjliUoFHUw88SS
      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
    </thumbnail>
  </thumbnails>
</workbook>
